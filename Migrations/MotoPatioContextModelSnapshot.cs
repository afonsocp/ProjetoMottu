// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MotoPatioAPI.Migrations
{
    [DbContext(typeof(MotoPatioContext))]
    partial class MotoPatioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Localizacao", b =>
                {
                    b.Property<int>("ID_Localizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_LOCALIZACAO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Localizacao"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Cidade");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Estado");

                    b.HasKey("ID_Localizacao");

                    b.ToTable("Localizacoes");
                });

            modelBuilder.Entity("Manutencao", b =>
                {
                    b.Property<int>("ID_Manutencao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MANUTENCAO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Manutencao"));

                    b.Property<decimal>("Custo")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("CUSTO");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("ID_Moto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MOTO");

                    b.HasKey("ID_Manutencao");

                    b.HasIndex("ID_Moto");

                    b.ToTable("Manutencoes");
                });

            modelBuilder.Entity("Moto", b =>
                {
                    b.Property<int>("ID_Moto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MOTO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Moto"));

                    b.Property<int>("Ano")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ANO");

                    b.Property<int>("ID_Localizacao")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_LOCALIZACAO");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("MODELO");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("PLACA");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STATUS");

                    b.HasKey("ID_Moto");

                    b.HasIndex("ID_Localizacao");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("Motos");
                });

            modelBuilder.Entity("Reserva", b =>
                {
                    b.Property<int>("ID_Reserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_RESERVA");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Reserva"));

                    b.Property<DateTime>("Data_Devolucao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_DEVOLUCAO");

                    b.Property<DateTime>("Data_Reserva")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_RESERVA");

                    b.Property<int>("ID_Moto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MOTO");

                    b.Property<int>("ID_Usuario")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("ID_Reserva");

                    b.HasIndex("ID_Moto");

                    b.HasIndex("ID_Usuario");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("ID_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_USUARIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Usuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SENHA");

                    b.HasKey("ID_Usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Manutencao", b =>
                {
                    b.HasOne("Moto", "Moto")
                        .WithMany("Manutencoes")
                        .HasForeignKey("ID_Moto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("Moto", b =>
                {
                    b.HasOne("Localizacao", "Localizacao")
                        .WithMany("Motos")
                        .HasForeignKey("ID_Localizacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localizacao");
                });

            modelBuilder.Entity("Reserva", b =>
                {
                    b.HasOne("Moto", "Moto")
                        .WithMany("Reservas")
                        .HasForeignKey("ID_Moto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("ID_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Localizacao", b =>
                {
                    b.Navigation("Motos");
                });

            modelBuilder.Entity("Moto", b =>
                {
                    b.Navigation("Manutencoes");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
